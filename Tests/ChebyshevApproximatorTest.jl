include("../../Julia-Rootfinding/yroots/ChebyshevApproximator.jl")

function transformPointsTest()
        # TESTING TRANSFORM
        # 1 dim test
        x_1 = [1;
                -1;
                .234775;
                -1/3]
        a_1 = [-5.54]
        b_1 = [1.2]
        result_1 = [1.200000000000000177635683940025;
        -5.540000000000000035527136788005;
        -1.378808249999999846480136511673;
        -3.293333333333333001746723311953]

        @assert isapprox(transformPoints(x_1,a_1,b_1), result_1) "transform 1 dim failed"

        # 1 dim test without arrays for upper/lower bounds
        x_1 = [1;
                -1;
                .234775;
                -1/3]
        a_1 = -5.54
        b_1 = 1.2
        result_1 = [1.200000000000000177635683940025;
        -5.540000000000000035527136788005;
        -1.378808249999999846480136511673;
        -3.293333333333333001746723311953]

        @assert isapprox(transformPoints(x_1,a_1,b_1), result_1) "transform 1 dim failed without array boxes"

        # 2 dim test
        x_2 = [1 1;
                -1 -1;
                .234775 .3456;
                -1/3 .99999999]
        a_2 = [-5.54 0]
        b_2 = [1.2 7.5]
        result_2 = [1.20000000000000017763568394002 7.5;
                -5.5400000000000000355271367880 0.0;
                -1.378808249999999846480136511 5.0460000000000002629008122312;
                -3.2933333333333330017467233119 7.4999999625000004499497663346]
                
        @assert isapprox(transformPoints(x_2,a_2,b_2), result_2) "transform 2 dim failed"


        # 3 dim test
        x_3 = [1 1 1;
                -1 -1 -1;
                -.2345555 .5 -.23455;
                -1/3 .99999999 1]
        a_3 = [0 0 1]
        b_3 = [1.2 7.5 4]
        result_3 = [1.199999999999999955591079014994 7.500000000000000000000000000000 4.000000000000000000000000000000;
                0.000000000000000000000000000000 0.000000000000000000000000000000 1.000000000000000000000000000000;
                0.459266699999999972181541352256 5.625000000000000000000000000000 2.148175000000000167688085639384;
                0.400000000000000022204460492503 7.499999962500000449949766334612 4.000000000000000000000000000000] 

        @assert isapprox(transformPoints(x_3,a_3,b_3), result_3) "transform 3 dim failed"

        # 4 dim test
        x_4 = [1 1 1 1;
                -1 -1 -1 -1;
                4/9 -.9 5/166 -5/8;
                1/3 -9/10 1 -1]
        a_4 = [-19 4 7 -8]
        b_4 = [4/9 21/5 8 0]
        result_4 = [0.444444444444442865460587199777 4.199999999999999289457264239900 8.000000000000000000000000000000 0.000000000000000000000000000000;
                -19.000000000000000000000000000000 3.999999999999999555910790149937 7.000000000000000000000000000000 -8.000000000000000000000000000000;
                -4.956790123456791263834020355716 4.009999999999999786837179271970 7.515060240963855164864071412012 -6.500000000000000000000000000000;
                -6.037037037037038089692941866815 4.009999999999999786837179271970 8.000000000000000000000000000000 -8.000000000000000000000000000000]

        @assert isapprox(transformPoints(x_4,a_4,b_4), result_4) "transform 4 dim failed"
end

# RUNNING ALL TESTS
function allTests()
        transformPointsTest()
end

allTests()